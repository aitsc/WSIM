import pickle
import copy
import os


def 保存序列(字典或列表, 保存地址):
    二进制流 = pickle.dumps(字典或列表)
    with open(保存地址, 'wb') as w:
        w.write(二进制流)


def 开始计算(tassign文件地址, 作者索引_作者号表地址, 作者_论文8年份广义表d地址, 主题数, alpha, 文档分割标识号=0):
    专家_主题_时间8分布张量d = {}
    专家_主题_时间8出现次数张量d = {}
    专家_主题分布矩阵d = {}
    作者号表 = []
    with open(作者索引_作者号表地址) as 读取:
        for 一行 in 读取:
            作者号表.append(一行[:-1].split('\t')[1])
    with open(作者_论文8年份广义表d地址, 'rb') as r:
        作者_论文8年份广义表d = pickle.load(r)

    第几作者_索引 = 0
    文档总数 = 0
    词总数 = 0
    读取 = open(tassign文件地址)
    for 一行 in 读取:
        一行 = 一行.strip().split('\t')
        一行 = [i.split(':') for i in 一行]
        一个作者词号_主题表 = [[int(i[0]), int(i[1])] for i in 一行]
        作者号 = 作者号表[第几作者_索引]
        专家_主题_时间8出现次数张量d[作者号] = [{} for i in range(主题数)]
        专家_主题分布矩阵d[作者号] = [0] * 主题数
        第几文档 = -1
        for 一个词号_主题 in 一个作者词号_主题表:
            if 一个词号_主题[0] == 文档分割标识号:
                第几文档 += 1
                文档总数 += 1
            try:
                年份 = int(作者_论文8年份广义表d[作者号][第几文档][1])
            except:
                print(作者号)
                print(第几文档)
                print(作者_论文8年份广义表d[作者号])
                raise
            主题 = 一个词号_主题[1]
            词总数 += 1
            专家_主题分布矩阵d[作者号][主题] += 1
            if 年份 in 专家_主题_时间8出现次数张量d[作者号][主题]:
                专家_主题_时间8出现次数张量d[作者号][主题][年份] += 1
            else:
                专家_主题_时间8出现次数张量d[作者号][主题][年份] = 1
        第几作者_索引 += 1
    读取.close()

    for 专家, 一个文档丨主题分布向量 in 专家_主题分布矩阵d.items():
        总主题数 = 0
        for 单主题数 in 一个文档丨主题分布向量:
            总主题数 += 单主题数
        for i in range(len(一个文档丨主题分布向量)):
            一个文档丨主题分布向量[i] = (一个文档丨主题分布向量[i] + alpha) / (总主题数 + alpha * 主题数)

    专家_主题_时间8分布张量d = copy.deepcopy(专家_主题_时间8出现次数张量d)
    for 专家, 主题_时间8分布矩阵l in 专家_主题_时间8分布张量d.items():
        第几主题 = -1
        for 时间8分布表d in 主题_时间8分布矩阵l:
            主题出现次数 = 0
            第几主题 += 1
            for 出现次数 in 时间8分布表d.values():
                主题出现次数 += 出现次数
            if 主题出现次数 == 0:
                continue
            for 时间, 出现次数 in 时间8分布表d.items():
                时间8分布表d[时间] = 出现次数 / 主题出现次数 * 专家_主题分布矩阵d[专家][第几主题]

    print('作者总数:%d，文档总数:%d，词总数:%d，作者平均文档数:%f，文档平均词数:%f' %
          (len(专家_主题分布矩阵d), 文档总数, 词总数, 文档总数 / len(专家_主题分布矩阵d), 词总数 / 文档总数))
    return 专家_主题_时间8分布张量d, 专家_主题_时间8出现次数张量d


ap = os.path.expanduser('~')
输出文件目录 = ap + '/code/data/1-RAP/输出文件目录-16/'

专家_主题_时间8分布张量d, 专家_主题_时间8出现次数张量d = 开始计算(tassign文件地址=输出文件目录 + '3-tassign文件.txt',
                                        作者索引_作者号表地址=输出文件目录 + '3-文档编号_文档名表.txt',
                                        作者_论文8年份广义表d地址=输出文件目录 + 'e+作者_论文8年份广义表d.pkl',
                                        主题数=50, alpha=0.5, 文档分割标识号=0)

保存序列(字典或列表=专家_主题_时间8分布张量d,
     保存地址=输出文件目录 + 'f+专家_主题_时间8分布张量d.pkl', )
保存序列(字典或列表=专家_主题_时间8出现次数张量d,
     保存地址=输出文件目录 + 'f+专家_主题_时间8出现次数张量d.pkl', )
